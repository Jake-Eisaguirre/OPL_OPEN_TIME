---
title: "OPL_OPEN_TIME"
format: html
editor: source
---

## Packages
```{r}

if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

# librarian downloads, if not already downloaded, and reads in needed packages
librarian::shelf(tidyverse, here, DBI, odbc)


date <- Sys.Date()

```



```{r}
tryCatch({
  db_connection <- DBI::dbConnect(odbc::odbc(),  # Establish a database connection using ODBC for the playground database
                                     Driver = "SnowflakeDSIIDriver",  # Specify the Snowflake ODBC driver
                                     Server = "hawaiianair.west-us-2.azure.snowflakecomputing.com",  # Server address
                                     WAREHOUSE = "DATA_LAKE_READER",  # Specify the Snowflake warehouse
                                     Database = "PLAYGROUND",  # Specify the database name
                                     UID = "jacob.eisaguirre@hawaiianair.com",  # User ID for authentication
                                     authenticator = "externalbrowser")  # Use external browser for authentication
  print("Database Connected!")  # Print success message if connection is established
}, error = function(cond) {
  print("Unable to connect to Database.")  # Print error message if connection fails
})

# Set schema and retrieve data from `AA_FINAL_PAIRING` table
dbExecute(db_connection, "USE SCHEMA CREW_ANALYTICS") 

```

```{r}
fp_q <- paste("select * from AA_FINAL_PAIRING where FLIGHT_DATE >'", date,"';")

raw_fp <- dbGetQuery(db_connection, fp_q)


```


## Pilots - CA & FO
```{r}


ot_pilot_pairings <- raw_fp %>% 
  filter(!DEPARTING_CITY %in% c("BOS", "AUS", "HND", "KIX", "NRT", "ICN", "FUK", "SYD",
                              "AKL", "JFK", "CRK"),
         PAIRING_POSITION %in% c("CA", "FO")) %>% 
  group_by(FLIGHT_DATE, FLIGHT_NO, DEPARTING_CITY, ARRIVAL_CITY, SCHED_DEPARTURE_TIME, SCHED_ARRIVAL_TIME) %>% 
  reframe(n = n(),
          PAIRING_NO = PAIRING_NO,
          PAIRING_DATE = PAIRING_DATE,
          EQUIPMENT = EQUIPMENT) %>% 
  filter(n <= 1) %>% 
  select(FLIGHT_DATE, FLIGHT_NO, DEPARTING_CITY, ARRIVAL_CITY, SCHED_DEPARTURE_TIME, SCHED_ARRIVAL_TIME, PAIRING_NO, PAIRING_DATE)

p_counts <- raw_fp %>% 
  filter(PAIRING_POSITION %in% c("CA", "FO")) %>% 
  select(FLIGHT_DATE, FLIGHT_NO, PAIRING_DATE, PAIRING_NO, PAIRING_POSITION, 
         EQUIPMENT, DEPARTING_CITY, ARRIVAL_CITY, SCHED_ARRIVAL_TIME, SCHED_DEPARTURE_TIME) %>% 
  group_by(FLIGHT_DATE, FLIGHT_NO, PAIRING_NO, PAIRING_POSITION, 
           EQUIPMENT, DEPARTING_CITY, ARRIVAL_CITY, SCHED_ARRIVAL_TIME, SCHED_DEPARTURE_TIME) %>% 
  distinct() %>% 
  semi_join(ot_pilot_pairings, by = c("FLIGHT_DATE", "FLIGHT_NO", "PAIRING_NO", "DEPARTING_CITY", "ARRIVAL_CITY")) %>% 
  mutate(PAIRING_PRESENT = 0) %>%
  pivot_wider(names_from = PAIRING_POSITION, values_from = PAIRING_PRESENT, values_fill = 1) %>% 
  mutate(across(c("CA", "FO"), ~ if_else(is.na(.), 1, .))) %>%
  ungroup() %>% 
  filter(CA == 1 |
         FO == 1) %>% 
  mutate(RO = NA)



```

## Pilots - RO
```{r}

ot_ro_pairings <- raw_fp %>% 
  filter(DEPARTING_CITY %in% c("BOS", "AUS", "HND", "KIX", "NRT", "ICN", "FUK", "SYD",
                              "AKL", "JFK", "CRK"),
         PAIRING_POSITION %in% c("CA", "FO", "RO"),
         !EQUIPMENT == "33Y") %>% 
  select(FLIGHT_DATE, FLIGHT_NO, DEPARTING_CITY, ARRIVAL_CITY, 
         SCHED_DEPARTURE_TIME, SCHED_ARRIVAL_TIME, PAIRING_POSITION) %>% 
  mutate(n = 0) %>%
  group_by(FLIGHT_DATE, FLIGHT_NO, DEPARTING_CITY, ARRIVAL_CITY, SCHED_DEPARTURE_TIME, SCHED_ARRIVAL_TIME) %>% 
  complete(
    PAIRING_POSITION = c("CA", "FO", "RO"), 
    fill = list(n = 1)
  ) %>% 
  distinct() %>% 
  pivot_wider(names_from = PAIRING_POSITION, values_from = n)

  

reframe(n = n(),
          PAIRING_NO = PAIRING_NO,
          PAIRING_DATE = PAIRING_DATE,
          EQUIPMENT = EQUIPMENT) %>% 
  filter(!EQUIPMENT == "33Y",
         n <= 2) %>% 
  distinct() %>% 
  mutate(RO = 1,
         CA = 0,
         FO = 0) %>% 
  select(!n)



final_open_p_counts <- rbind(p_counts, ot_ro_pairings)

```


## FA
```{r}

ot_fa_pairings <- raw_fp %>% 
  filter(CREW_INDICATOR == "FA")%>% 
  group_by(FLIGHT_DATE, FLIGHT_NO, DEPARTING_CITY, ARRIVAL_CITY, SCHED_DEPARTURE_TIME, SCHED_ARRIVAL_TIME) %>% 
  reframe(n = n(),
          PAIRING_NO = PAIRING_NO,
          EQUIPMENT = EQUIPMENT)

```

