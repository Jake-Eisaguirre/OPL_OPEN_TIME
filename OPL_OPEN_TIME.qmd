---
title: "OPL_OPEN_TIME"
format: html
editor: source
---

## Packages
```{r}

if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

# librarian downloads, if not already downloaded, and reads in needed packages
librarian::shelf(tidyverse, here, DBI, odbc)



```



```{r}
tryCatch({
  db_connection <- DBI::dbConnect(odbc::odbc(),  # Establish a database connection using ODBC for the playground database
                                     Driver = "SnowflakeDSIIDriver",  # Specify the Snowflake ODBC driver
                                     Server = "hawaiianair.west-us-2.azure.snowflakecomputing.com",  # Server address
                                     WAREHOUSE = "DATA_LAKE_READER",  # Specify the Snowflake warehouse
                                     Database = "ENTERPRISE",  # Specify the database name
                                     UID = "jacob.eisaguirre@hawaiianair.com",  # User ID for authentication
                                     authenticator = "externalbrowser")  # Use external browser for authentication
  print("Database Connected!")  # Print success message if connection is established
}, error = function(cond) {
  print("Unable to connect to Database.")  # Print error message if connection fails
})

# Set schema and retrieve data from `AA_FINAL_PAIRING` table
dbExecute(db_connection, "USE SCHEMA CREW_ANALYTICS") 

```

```{r}
ot_q <- "select * from CT_OPEN_TIME where PAIRING_DATE > '2024-10-24';"

raw_ot <- dbGetQuery(db_connection, ot_q)


```


```{r}


clean_ot <- raw_ot %>% 
  mutate(updated_dt = paste(UPDATE_DATE, UPDATE_TIME, sep = " ")) %>% 
  mutate(RESERVE_POSITION = ifelse(RESERVE_POSITION %in% c("CA", "FO", "RO", "FA"),
                                   RESERVE_POSITION, 
                                   "FA"),
         BASE = if_else(BASE == "HAL", "HNL", BASE),
         RESERVE_POSITION = if_else(RESERVE_POSITION == "RO", "FO", RESERVE_POSITION)) %>% 
  group_by(PAIRING_NO, PAIRING_DATE, RESERVE_POSITION, BASE) %>% 
  filter(#updated_dt == max(updated_dt),
         ORIGIN == "M") %>% 
  ungroup() %>%
  filter(PAIRING_ASSIGNMENT_CODE == "TSA" & REMOVE_CODE == "TSD") %>% 
  group_by(PAIRING_DATE, RESERVE_POSITION, BASE) %>% 
  reframe(n = n())
  

```

